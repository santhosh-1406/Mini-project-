from tkinter import *

import mysql.connector as a

con=a.connect(host='localhost',
              user='root',
              passwd='dbsg122023',
              database='quiz_application')
cn=con.cursor()


def insert_question() :
        try:
            while True:
                qn=int(input("\t\t\t\t\tEnter Question number : "))
                que=input("\t\t\t\t\tEnter the question :")
                opt1=input("\t\t\t\t\tEnter Option 1 :")
                opt2=input("\t\t\t\t\tEnter Option 2 :")
                opt3=input("\t\t\t\t\tEnter Option 3 :")
                ans=input("\t\t\t\t\tEnter the Answer :")
                cn.execute("insert into questions values({},'{}','{}','{}','{}','{}')".format(qn,que,opt1,opt2,opt3,ans))
                con.commit()
                print()
                print('Question added successfully')
                ch=input("\t\t\t\tWant to add more questions? Press (N/n) to stop entry: ")
                if ch in 'Nn' :
                    print()
                    print('='*150)
                    print('\t\t\t\t\t\t\t','*'*15,'Thank You','*'*15)
                    print('='*150)
                    break
        except Exception as e :
            print("Error",e)



def delete_question():
        try:
            while True:
                rn=int(input("\t\tEnter Question number : "))
                cn.execute("delete from questions where Q_no={}".format(rn))
                print()
                con.commit()
                print('Given question Successfully Deleted')
                ch=input("\t\tWant more records? Press (N/n) to stop entry: ")
                if ch in 'Nn' :
                    break

        except Exception as e :
            print("Error",e)


def view_question():
        try:
            question={}
            ans=[]
            qn=[]
            cn.execute('select * from questions')
            rec=cn.fetchall()
            for i in rec:
                qn.append(i[0])
                temp1=i[1]
                temp2=[i[2],i[3],i[4]]
                ans.append(i[5])
                question[temp1]=temp2
            num=0

            for j in question:
                print()
                print('Question',qn[num],':')
                print(j,'\n')
                print(question[j][0])
                print(question[j][1])
                print(question[j][2])
                num+=1
                

            print()
            print('_'*150)
        except Exception as e :
            print("Error",e)


def start_quiz():
        start_button.forget()
        next_button.pack()
        next_question()


def next_question():
        global current_question
        
        if current_question < len(question):
                # get key or question that need to be printed
                check_ans()
                user_ans.set('None')
                c_question = list(question.keys())[current_question]
                # clear frame to update its content
                clear_frame()
                # printing question
                Label(f1, text=f"Question : {c_question}", padx=15,
                        font="calibre 12 normal").pack(anchor=NW)
                # printing options
                for option in question[c_question]:
                        Radiobutton(f1, text=option, variable=user_ans,
                                                value=option, padx=28).pack(anchor=NW)
                current_question += 1
        else:
                next_button.forget()
                check_ans()
                clear_frame()
                output = f"Your Score is {user_score.get()} out of {len(question)}"
                Label(f1, text=output, font="calibre 25 bold").pack()
                Label(f1, text="Thanks for Participating",
                        font="calibre 18 bold").pack()


def check_ans():
        temp_ans = user_ans.get()
        if temp_ans != 'None' and temp_ans == ans[current_question-1]:
                user_score.set(user_score.get()+1)

     
def clear_frame():
        for widget in f1.winfo_children():
                widget.destroy()


def admin():
    while True:
        print()
        print('\t\t\t\t\t\t\t ************** MAIN MENU **************','\n')
        print('='*150,'\n')
        print('\t\t\t\t\t\t\t1. Insert new question')
        print('\t\t\t\t\t\t\t2. Delete exisiting question')
        print('\t\t\t\t\t\t\t3. View Questions')
        print('\t\t\t\t\t\t\t4. Exit\n')

        x=int(input('Enter your choice :'))
        if x == 1:
            insert_question()
        elif x == 2:
            delete_question()
        elif x == 3:
            view_question()
        elif x == 4:
            print('='*150,'\n')
            print(' '*55,'*********** Thank you ************','\n')
            print('='*150)
            break

        else:
            print('Enter correct option')


#Main program

print('='*150,'\n')
print(' '*55,'*'*15,' QUIZ CONQUEROR ','*'*15,'\n')
print('='*150)

print("\n\t\t\t\t\t\t\t\t\t  1.Admin")
print("\t\t\t\t\t\t\t\t\t  2.Player")
choice=int(input("\n\t\t\t\t\t\t\t  Enter the required choice[1,2] : "))

if choice == 1:
    a=int(input("\t\t\t\t\t\t\t  4 digit pin please : "))
    print()
    print('='*150)
    if a == 1008:
       admin()
    
    else:
        print('='*150)
        print('\t\t\t\t\t\t\t  INCORRECT PIN...')
        print('='*150)

elif choice == 2:
        question={}
        ans=[]
        cn.execute('select * from questions')
        rec=cn.fetchall()
        for i in rec:
            temp1=i[1]
            temp2=[i[2],i[3],i[4]]
            ans.append(i[5])
            question[temp1]=temp2
        

        current_question = 0
        root = Tk()
        # setup basic window
        root.title("CONQUEROR QUIZ APP")
        root.geometry("850x520")
        root.minsize(800, 400)

        user_ans = StringVar()
        user_ans.set('None')
        user_score = IntVar()
        user_score.set(0)

        Label(root, text="Quiz Conqueror",
                font="georgia 40 bold",
                relief=SUNKEN, background="orange",
                padx=10, pady=9).pack()
        Label(root, text="", font="calibre 10 bold").pack()
        start_button = Button(root,
                                                text="Start Quiz",
                                                command=start_quiz,
                                                font="calibre 17 bold")
        start_button.pack()

        f1 = Frame(root)
        f1.pack(side=TOP, fill=X)

        next_button = Button(root, text="Next Question",
                                                command=next_question,
                                                font="calibre 17 bold")

        root.mainloop()


else:
    print('Enter correct option')
